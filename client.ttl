;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;IoT-NTN script
;LTE-M with NBNTN fallback
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;Configuration
;how log to wait for response
timeout = 120
;how long to wait between data sends (in seconds)
dataloop = 30
;last known location
lastLat = "51.143325"
lastLng = "17.153323"
;Band configuration
LTEMBand = "20"
NTNBand =  "256"
;LTEM = 0 OR NBNTN = 1 
primaryAccess = 1
;APN and server configuration
APN = "soracom.io"
udpServer = "100.127.69.42"
udpPort = "23080"
;APN = "DATA.MONO"
;udpServer = "51.158.1.21"
;udpPort = "5210"


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;General configuration
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
:config
sendln 'ATZ'
wait '%BOOTEV:0'
; If timeout occurs, go to ":config".
if result=0 goto config

;PIN ready
sendln 'AT+CPIN?'
wait 'OK'  
; If timeout occurs, go to ":iconfig".
if result=0 goto config

;reporting to verbose
sendln 'AT%SETACFG="manager.urcBootEv.enabled","true"'
wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config

;external SIM
sendln 'AT%SETCFG="SIM_INIT_SELECT_POLICY","0"'
wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config

sendln 'ATZ'
wait '%BOOTEV:0'
; If timeout occurs, go to ":config".
if result=0 goto config

;NTN parameters
sendln 'AT%SETACFG="radiom.config.multi_rat_enable","true"'
wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config
sendln 'AT%SETACFG="radiom.config.preferred_rat_list","none"'
wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config
sendln 'AT%SETACFG="radiom.config.auto_preference_mode","none"'
wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config
sendln 'AT%SETACFG="locsrv.operation.locsrv_enable","true"'
wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config

sendln 'AT%SETACFG=locsrv.operation.chip_select,alt1250'
wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config

sendln 'AT%SETACFG="locsrv.internal_gnss.auto_restart","enable"'
wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config
sendln 'AT%SETACFG="modem_apps.Mode.AutoConnectMode","true"'
wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;primmary access selection 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

if primaryAccess = 0 goto initLTEM


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;initNTN
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
:initNTN
sendln 'ATZ'
wait '%BOOTEV:0'
; If timeout occurs, go to ":initNTN".
if result=0 goto initNTN

;switch to NTN plan 
sendln 'AT+CSIM=52,"80C2000015D613190103820282811B0100130799F08900010001"'
wait 'OK'  
; If timeout occurs, go to ":initNTN".
if result=0 goto initNTN

;RAT image selection
sendln 'AT%RATIMGSEL=2'
wait 'OK'  
; If timeout occurs, go to ":initNTN".
if result=0 goto initNTN

sendln 'AT%RATACT="NBNTN","1"'
wait 'OK'  
; If timeout occurs, go to ":initNTN".
if result=0 goto initNTN

sprintf 'AT%%SETCFG="BAND","%s"' NTNBand

sendln inputstr
wait 'OK'  
; If timeout occurs, go to ":initNTN".
if result=0 goto initNTN

sendln 'AT+CFUN=0'
wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config

sprintf 'AT%%PDNSET=1,"%s","IP"' APN
sendln inputstr

wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config

sendln 'ATZ'
wait '%BOOTEV:0'
; If timeout occurs, go to ":config".
if result=0 goto config

goto NTNloop

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; initLTEM
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
:initLTEM

sendln 'ATZ'
wait '%BOOTEV:0'
; If timeout occurs, go to ":initLTEM".
if result=0 goto initLTEM

;switch to LTEM plan 
sendln 'AT+CSIM=52,"80C2000015D613190103820282811B0100130799F05000010001"'
wait 'OK'  
; If timeout occurs, go to ":initLTEM".
if result=0 goto initLTEM

;RAT image selection
sendln 'AT%RATIMGSEL=1'
wait 'OK'  
; If timeout occurs, go to ":initLTEM".
if result=0 goto initLTEM

;set LTE-M RAT
sendln 'AT%RATACT="CATM",1'
wait 'OK'  
; If timeout occurs, go to ":initLTEM".
if result=0 goto initLTEM

;set band
sprintf 'AT%%SETCFG="BAND","%s"' LTEMBand

sendln inputstr

wait 'OK'  
; If timeout occurs, go to ":initLTEM".
if result=0 goto initLTEM

sendln 'AT+CFUN=0'
wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config

sprintf 'AT%%PDNSET=1,"%s","IP"' APN
sendln inputstr

wait 'OK'  
; If timeout occurs, go to ":config".
if result=0 goto config

sendln 'ATZ'
wait '%BOOTEV:0'
; If timeout occurs, go to ":initLTEM".
if result=0 goto initNTN

goto LTEMloop

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;NTNloop
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
:NTNloop

sendln 'AT+CFUN=0'
wait 'OK'
; If timeout occurs, go to ":NTNloop".
if result=0 goto NTNloop


sendln 'AT%IGNSSEV="FIX",1'   
wait 'OK' 
; If timeout occurs, go to ":NTNloop".
if result=0 goto NTNloop 

sendln 'AT%IGNSSACT=0'
waitln 'OK'
;If timeout occurs, go to ":NTNloop".
if result=0 goto NTNloop

sendln 'AT%IGNSSACT=1'
waitln 'FIX'
; If timeout occurs, go to ":initLTEM" (this is fallback technology)
if result=0 goto initLTEM

:getLocationNTN
strmatch inputstr '(\d{1,3}\.\d+)","(\d{1,3}\.\d+)'

lastLat = groupmatchstr1
lastLng = groupmatchstr2


; FIX

; CONNECT
sendln 'AT+CEREG=2'
wait 'OK'
; If timeout occurs, go to ":NTNloop".
if result=0 goto NTNloop

sendln 'AT%NOTIFYEV="SIB31",1'  
wait 'OK'  
; If timeout occurs, go to ":NTNloop".
if result=0 goto NTNloop

sendln 'AT+CFUN=1'
wait 'CEREG: 5'
; If timeout occurs, go to try NTN
if result=0 goto initLTEM

sendln 'AT%MEAS="8"'
waitln 'MEAS:'
; If timeout occurs, go to ":NTNloop".
if result=0 goto NTNloop

strmatch inputstr 'RSRP = (-?\d+), RSRQ = (-?\d+), SINR = (-?\d+), RSSI = (-?\d+)'

sprintf '{"lat":"%s","lng":"%s","type":"NB-IoT-NTN","RSRP":"%s","RSRQ":"%s","SINR":"%s","RSSI":"%s"}' lastLat lastLng groupmatchstr1 groupmatchstr2 groupmatchstr3 groupmatchstr4

;ASCII to HEX
str = inputstr
strlen str
len = result
hex = ""
char = ""
code = 0 


i = 1
while i <= len
    strcopy str i 1 char
    str2code code char
    sprintf '%s%X' hex code
    hex = inputstr
    char = ""
    code = 0 
    i = i + 1
endwhile
;ASCII to HEX




; SEND
sprintf 'AT%%SOCKETCMD="ALLOCATE",1,"UDP","OPEN","%s",%s,0' udpServer udpPort
sendln inputstr
wait 'OK' 'ERROR'
; If timeout occurs, go to ":NTNloop".
if result=0 goto NTNloop

sendln 'AT%SOCKETCMD="ACTIVATE",1'
wait 'OK' 'ERROR'
; If timeout occurs, go to ":NTNloop".
if result=0 goto NTNloop

strlen hex
charlen = result / 2
sprintf 'AT%%SOCKETDATA="SEND",1,%d,"%s"' charlen hex

sendln inputstr
wait 'OK' 'ERROR'
; If timeout occurs, go to ":NTNloop".
if result=0 goto NTNloop

;confirmation 
wait '%SOCKETEV:1,1'
; If timeout occurs, go to ":NTNloop".
if result=0 goto NTNloop

;do not delete socket  before response
sendln 'AT%SOCKETCMD="DELETE",1'
wait 'OK' 'ERROR'
; If timeout occurs, go to ":NTNloop".
if result=0 goto NTNloop

sendln 'AT+CFUN=0'
wait 'OK'
; If timeout occurs, go to ":NTNloop".
if result=0 goto NTNloop

    pause dataloop

; start with primary access technology
if primaryAccess = 0 then

    goto initLTEM
else 

    goto NTNloop
endif 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;LTEM loop
;fallback to LTEM it is assumend that no fix possible
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
:LTEMloop

; INIT 
sendln 'AT+CFUN=0'
wait 'OK'
; If timeout occurs, go to ":LTEMloop".
if result=0 goto LTEMloop

;FIX
sendln 'AT%IGNSSEV="FIX",1'   
wait 'OK' 
; If timeout occurs, go to ":LTEMloop".
if result=0 goto LTEMloop 

sendln 'AT%IGNSSACT=0'
waitln 'OK'
;If timeout occurs, go to ":NTNloop".
if result=0 goto LTEMloop


sendln 'AT%IGNSSACT=1'
waitln 'FIX'
; If timeout occurs, go to ":LTEMnoFix" and use last known location
if result=0 goto LTEMnofix

strmatch inputstr '(\d{1,3}\.\d+)","(\d{1,3}\.\d+)'

lastLat = groupmatchstr1
lastLng = groupmatchstr2


;FIX

:LTEMnofix
; CONNECT
sendln 'AT+CEREG=2'
wait 'OK'
; If timeout occurs, go to ":LTEMloop".
if result=0 goto LTEMloop

sendln 'AT+CFUN=1'
wait 'CEREG: 5'
; If timeout occurs, go to NTN".
if result=0 goto initNTN

sendln 'AT%MEAS="8"'
waitln 'MEAS:'
; If timeout occurs, go to ":LTEMloop".
if result=0 goto LTEMloop

strmatch inputstr 'RSRP = (-?\d+), RSRQ = (-?\d+), SINR = (-?\d+), RSSI = (-?\d+)'

sprintf '{"lat":"%s","lng":"%s","type":"LTEM","RSRP":"%s","RSRQ":"%s","SINR":"%s","RSSI":"%s"}' lastLat lastLng groupmatchstr1 groupmatchstr2 groupmatchstr3 groupmatchstr4

;ASCII to HEX
str = inputstr
strlen str
len = result
hex = ""
char = ""
code = 0 


i = 1
while i <= len
    strcopy str i 1 char
    str2code code char
    sprintf '%s%X' hex code
    hex = inputstr
    char = ""
    code = 0 
    i = i + 1
endwhile
;ASCII to HEX


; SEND
sprintf 'AT%%SOCKETCMD="ALLOCATE",1,"UDP","OPEN","%s",%s,0' udpServer udpPort
sendln inputstr
wait 'OK' 'ERROR'
; If timeout occurs, go to ":LTEMloop".
if result=0 goto LTEMloop

sendln 'AT%SOCKETCMD="ACTIVATE",1'
wait 'OK' 'ERROR'
; If timeout occurs, go to ":LTEMloop".
if result=0 goto LTEMloop


strlen hex
charlen = result / 2
sprintf 'AT%%SOCKETDATA="SEND",1,%d,"%s"' charlen hex

sendln inputstr
wait 'OK' 'ERROR'
; If timeout occurs, go to ":LTEMloop".
if result=0 goto LTEMloop

;confirmation 
wait '%SOCKETEV:1,1'
; If timeout occurs, go to ":LTEMloop".
if result=0 goto LTEMloop

;do not delete socket  before response
sendln 'AT%SOCKETCMD="DELETE",1'
wait 'OK' 'ERROR'
; If timeout occurs, go to ":LTEMloop".
if result=0 goto LTEMloop

pause dataloop
; start with primary access technology
if primaryAccess = 0 then
    goto LTEMloop
else 
    goto initNTN
endif 

